import { createRouter, createWebHistory } from 'vue-router'import BooksView from '@/views/BooksView.vue'import AddBook from '@/views/AddBook.vue'import EditBook from '@/views/EditBook.vue'import BookDetail from '@/views/BookDetail.vue'import Dashboard from '@/views/Dashboard.vue'import Analytics from '@/views/Analytics.vue'import Settings from '@/views/Settings.vue'import LoginView from '@/views/LoginView.vue'import BorrowManage from '@/views/BorrowManage.vue'import UserHome from '@/views/UserHome.vue'import UserProfile from '@/views/UserProfile.vue'// 无需额外导入ForgotPassword组件，使用懒加载方式在路由中直接引入import { useUserStore } from '@/stores/user'import { ElMessage } from 'element-plus'const routes = [  {    path: '/login',    name: 'Login',    component: LoginView,    meta: { requiresAuth: false, hideNav: true }  },  // 新增：忘记密码路由（放在Login路由后，同属未登录访问的页面）  {    path: '/forgot-password',    name: 'ForgotPassword',    component: () => import('@/views/ForgotPassword.vue'), // 懒加载组件，优化首屏加载    meta: { requiresAuth: false, hideNav: true } // 无需认证，隐藏导航栏  },  {    path: '/',    redirect: '/home',    meta: { requiresAuth: true }  },  {    path: '/home',    name: 'Home',    component: UserHome,    meta: { requiresAuth: true }  },  {    path: '/dashboard',    name: 'Dashboard',    component: Dashboard,    meta: { requiresAuth: true, requiresAdmin: true }  },  {    path: '/books',    name: 'Books',    component: BooksView,    meta: { requiresAuth: true }  },  {    path: '/books/:id',    name: 'BookDetail',    component: BookDetail,    props: true,    meta: { requiresAuth: true }  },  {    path: '/add',    name: 'AddBook',    component: AddBook,    meta: { requiresAuth: true, requiresAdmin: true }  },  {    path: '/edit/:id',    name: 'EditBook',    component: EditBook,    props: true,    meta: { requiresAuth: true, requiresAdmin: true }  },  {    path: '/analytics',    name: 'Analytics',    component: Analytics,    meta: { requiresAuth: true, requiresAdmin: true }  },  {    path: '/settings',    name: 'Settings',    component: Settings,    meta: { requiresAuth: true, requiresAdmin: true }  },  {    path: '/borrows',    name: 'BorrowManage',    component: BorrowManage,    meta: { requiresAuth: true }  },  {    path: '/profile',    name: 'Profile',    component: UserProfile,    meta: { requiresAuth: true }  },  {    path: '/:pathMatch(.*)*',    redirect: '/home'  }]const router = createRouter({  history: createWebHistory(),  routes})router.beforeEach((to, from, next) => {  const userStore = useUserStore()  // 需要认证但未登录  if (to.meta.requiresAuth && !userStore.isAuthenticated) {    next('/login')  }  // 需要管理员权限但用户不是管理员  else if (to.meta.requiresAdmin && !userStore.userInfo.is_admin) {    next('/home')    ElMessage.warning('需要管理员权限')  }  // 已登录但访问登录页  else if (to.path === '/login' && userStore.isAuthenticated) {    // 根据用户角色跳转到不同页面    if (userStore.userInfo.is_admin) {      next('/dashboard')    } else {      next('/home')    }  }  // 其他情况正常放行（包括新增的忘记密码路由，因requiresAuth: false无需拦截）  else {    next()  }})export default router